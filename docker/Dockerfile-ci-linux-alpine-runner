ARG CI_REGISTRY
ARG CI_REGISTRY_BUILDER_ROOT_IMAGE

FROM ${CI_REGISTRY}/${CI_REGISTRY_BUILDER_ROOT_IMAGE}:latest

ARG CODE_CHECKER_VERSION
ARG CPP_CHECK_VERSION
ARG MAX_CPU_CORES

# Fix to add python 3.10 to compile codeChecker
RUN echo -e "http://dl-cdn.alpinelinux.org/alpine/v3.15/main\nhttp://dl-cdn.alpinelinux.org/alpine/v3.15/community\n" \
    > /etc/apk/repositories && apk update
# @todo gcompat is for codeChecker compilation without cyton messup
RUN apk add --no-cache gcompat git curl python3-dev~=3.9 py3-virtualenv py3-setuptools libxml2-dev libxslt-dev

# Install cpp-check with the given CPP_CHECK_VERSION version from https://github.com/danmar/cppcheck
RUN wget https://github.com/danmar/cppcheck/archive/refs/tags/${CPP_CHECK_VERSION}.tar.gz \
    -q -O /tmp/cppcheck-${CPP_CHECK_VERSION}.tar.gz && \
    cd /tmp && tar -xvzf cppcheck-${CPP_CHECK_VERSION}.tar.gz && cd cppcheck-${CPP_CHECK_VERSION} && \
    mkdir build && cd build && cmake .. && make -j ${MAX_CPU_CORES} && make install && \
    rm -rf /tmp/cppcheck-${CPP_CHECK_VERSION}.tar.gz /tmp/cppcheck-${CPP_CHECK_VERSION}

# Install codeChecker with the given CODE_CHECKER_VERSION version from https://github.com/Ericsson/codechecker
RUN wget https://github.com/Ericsson/codechecker/archive/refs/tags/v${CODE_CHECKER_VERSION}.tar.gz \
    -q -O /opt/codechecker-${CODE_CHECKER_VERSION}.tar.gz && \
    cd /opt && tar -xvzf codechecker-${CODE_CHECKER_VERSION}.tar.gz && cd codechecker-${CODE_CHECKER_VERSION} && \
    BUILD_LOGGER_64_BIT_ONLY=YES BUILD_UI_DIST=NO make standalone_package && \
    rm -rf /opt/codechecker-${CODE_CHECKER_VERSION}.tar.gz

ENV PATH="${PATH}:/opt/codechecker-${CODE_CHECKER_VERSION}/build/CodeChecker/bin"

WORKDIR /app

CMD ["/bin/bash"]
